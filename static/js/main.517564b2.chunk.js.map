{"version":3,"sources":["components/Button.tsx","components/Input.tsx","components/Background.tsx","forms/SignUp.tsx","components/CheckBox.tsx","forms/SignIn.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","memo","title","onClick","Input","name","inputLabel","placeholder","type","onChange","className","htmlFor","id","Background","children","SignUp","to","CheckBox","SignIn","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wUAceA,EANWC,gBAAK,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAAV,OAC7B,wBAAQA,QAASA,EAAjB,SACE,6BAAKD,S,QCiBME,G,MAhBUH,gBACvB,gBAAGI,EAAH,EAAGA,KAAMC,EAAT,EAASA,WAAYC,EAArB,EAAqBA,YAAaC,EAAlC,EAAkCA,KAAMC,EAAxC,EAAwCA,SAAxC,OACE,sBAAKC,UAAU,YAAf,UACE,uBAAOC,QAASN,EAAhB,SAAuBC,IACvB,uBACA,mCACEI,UAAU,cACVE,GAAIP,EACJG,KAAMA,EACNC,SAAUA,GACLF,EAAc,CAAEA,eAAgB,CAAEA,YAAaD,YCV7CO,G,MAJe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC5B,qBAAKJ,UAAU,aAAf,SAA6BI,MCoBhBC,G,MAlBiB,WAC9B,OACE,qBAAKL,UAAU,iBAAf,SACE,eAAC,EAAD,WACE,oBAAIA,UAAU,UAAd,qBACA,cAAC,EAAD,CAAOJ,WAAW,aAAaD,KAAK,cACpC,cAAC,EAAD,CAAOC,WAAW,YAAYD,KAAK,aACnC,cAAC,EAAD,CAAOC,WAAW,gBAAgBD,KAAK,UACvC,cAAC,EAAD,CAAOC,WAAW,WAAWD,KAAK,WAAWG,KAAK,aAClD,cAAC,EAAD,CAAQN,MAAM,YACd,qBAAIQ,UAAU,UAAd,gCACqB,cAAC,IAAD,CAAMM,GAAG,UAAT,gCCLdC,G,MAPahB,gBAAK,gBAAGI,EAAH,EAAGA,KAAMC,EAAT,EAASA,WAAYG,EAArB,EAAqBA,SAArB,OAC/B,sBAAKC,UAAU,eAAf,UACE,uBAAOE,GAAIP,EAAMG,KAAK,WAAWC,SAAUA,IAC3C,uBAAOE,QAASN,EAAhB,SAAuBC,WCcZY,EAfiB,WAC9B,OACE,qBAAKR,UAAU,iBAAf,SACE,eAAC,EAAD,WACE,oBAAIA,UAAU,UAAd,qBACA,cAAC,EAAD,CAAOJ,WAAW,gBAAgBD,KAAK,QAAQG,KAAK,UACpD,cAAC,EAAD,CAAOF,WAAW,WAAWD,KAAK,WAAWG,KAAK,aAClD,cAAC,EAAD,CAAUF,WAAW,cAAcD,KAAK,eACxC,cAAC,EAAD,CAAQH,MAAM,WACd,qBAAIQ,UAAU,UAAd,oBAA+B,cAAC,IAAD,CAAMM,GAAG,IAAT,+BCIxBG,EAjBc,WAC3B,OACE,mCACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cCFGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.517564b2.chunk.js","sourcesContent":["import { FC, memo, MouseEventHandler } from \"react\";\n\nimport \"./styles/button.css\";\n\ntype Props = {\n  title: string;\n  onClick?: MouseEventHandler<HTMLButtonElement>;\n};\nconst Button: FC<Props> = memo(({ title, onClick }) => (\n  <button onClick={onClick}>\n    <h3>{title}</h3>\n  </button>\n));\n\nexport default Button;\n","import { FC, memo, ChangeEventHandler } from \"react\";\n\nimport \"./styles/input.css\";\n\ntype Props = {\n  name: string;\n  type?: string;\n  inputLabel: string;\n  placeholder?: string;\n  onChange?: ChangeEventHandler<HTMLInputElement>;\n};\nconst Input: FC<Props> = memo(\n  ({ name, inputLabel, placeholder, type, onChange }) => (\n    <div className=\"input-div\">\n      <label htmlFor={name}>{inputLabel}</label>\n      <br />\n      <input\n        className=\"input-field\"\n        id={name}\n        type={type}\n        onChange={onChange}\n        {...(placeholder ? { placeholder } : { placeholder: inputLabel })}\n      />\n    </div>\n  )\n);\n\nexport default Input;\n","import { FC, ReactNode } from \"react\";\n\nimport \"./styles/background.css\";\n\ntype Props = {\n  children: ReactNode;\n};\nconst Background: FC<Props> = ({ children }) => (\n  <div className=\"background\">{children}</div>\n);\n\nexport default Background;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Button from \"src/components/Button\";\nimport Input from \"src/components/Input\";\nimport Background from \"src/components/Background\";\n\nimport \"./styles/form.css\";\n\ntype Props = {};\nconst SignUp: React.FC<Props> = () => {\n  return (\n    <div className=\"form-container\">\n      <Background>\n        <h1 className=\"heading\">Sign Up</h1>\n        <Input inputLabel=\"First Name\" name=\"firstName\" />\n        <Input inputLabel=\"Last Name\" name=\"lastName\" />\n        <Input inputLabel=\"Email address\" name=\"email\" />\n        <Input inputLabel=\"Password\" name=\"password\" type=\"password\" />\n        <Button title=\"Sign Up\" />\n        <h5 className=\"remarks\">\n          Already registered <Link to=\"/signin\">sign in?</Link>\n        </h5>\n      </Background>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import { FC, memo, ChangeEventHandler } from \"react\";\n\nimport './styles/checkbox.css'\n\ntype Props = {\n  name: string;\n  inputLabel: string;\n  onChange?: ChangeEventHandler<HTMLInputElement>;\n};\nconst CheckBox: FC<Props> = memo(({ name, inputLabel, onChange }) => (\n  <div className=\"checkbox-div\">\n    <input id={name} type=\"checkbox\" onChange={onChange} />\n    <label htmlFor={name}>{inputLabel}</label>\n  </div>\n));\n\nexport default CheckBox;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Button from \"src/components/Button\";\nimport Input from \"src/components/Input\";\nimport Background from \"src/components/Background\";\nimport CheckBox from \"src/components/CheckBox\";\n\nimport \"./styles/form.css\";\n\ntype Props = {};\nconst SignIn: React.FC<Props> = () => {\n  return (\n    <div className=\"form-container\">\n      <Background>\n        <h1 className=\"heading\">Sign In</h1>\n        <Input inputLabel=\"Email address\" name=\"email\" type=\"email\" />\n        <Input inputLabel=\"Password\" name=\"password\" type=\"password\" />\n        <CheckBox inputLabel=\"Remember Me\" name=\"rememberMe\" />\n        <Button title=\"Submit\" />\n        <h5 className=\"remarks\">Forgot <Link to=\"/\">password</Link></h5>\n      </Background>\n    </div>\n  );\n};\n\nexport default SignIn;\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport SignUp from \"src/forms/SignUp\";\nimport SignIn from \"src/forms/SignIn\";\n\ntype Props = {};\nconst App: React.FC<Props> = () => {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/signin\">\n            <SignIn />\n          </Route>\n          <Route path=\"/\">\n            <SignUp />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}